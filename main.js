!function(){"use strict";const e={formSelector:".modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__submit-btn",inactiveButtonClass:"modal__submit-btn_inactive",inputErrorClass:"modal__input_type_error",errorClass:"modal__input-error_active"},t=(e,t,r)=>{const o=e.querySelector(`.${t.id}-error`);t.classList.remove(r.inputErrorClass),o.classList.remove(r.errorClass),o.textContent=""},r=e=>{Array.from(document.querySelectorAll(e.formSelector)).forEach((r=>{r.addEventListener("submit",(e=>{e.preventDefault()})),((e,r)=>{const n=Array.from(e.querySelectorAll(r.inputSelector)),a=e.querySelector(r.submitButtonSelector);o(n,a,r),n.forEach((s=>{s.addEventListener("input",(()=>{((e,r,o)=>{r.validity.valid?t(e,r,o):((e,t,r,o)=>{const n=e.querySelector(`.${t.id}-error`);t.classList.add(o.inputErrorClass),n.textContent=r,n.classList.add(o.errorClass)})(e,r,r.validationMessage,o)})(e,s,r),o(n,a,r)}))}))})(r,e)}))},o=(e,t,r)=>{(e=>e.some((e=>!e.validity.valid)))(e)?(t.setAttribute("disabled",""),t.classList.add(r.inactiveButtonClass)):(t.removeAttribute("disabled"),t.classList.remove(r.inactiveButtonClass))};r(e);const n=[],a=new class{constructor(){this._token="df848569-e5f8-493b-8228-42998e590ff1",this._baseUrl="https://around-api.en.tripleten-services.com/v1",this._headers={authorization:this._token,"Content-type":"application/json"}}getAppInfo(){return Promise.all([this.getAllCards()])}getAllCards(){return fetch(`${this._baseUrl}/cards`,{method:"GET",headers:this._headers}).then((e=>{if(e.ok)return e.json();Promise.reject(`Error: ${e.status}`)}))}createCard(e){let{name:t,link:r}=e;return fetch(`${this._baseUrl}/cards`,{method:"POST",headers:this._headers,body:JSON.stringify({name:t,link:r})}).then((e=>{if(e.ok)return e.json();Promise.reject(`Error: ${e.status}`)}))}deleteCard(e){return fetch(`${this._baseUrl}/cards/${e}`,{method:"DELETE",headers:this._headers}).then((e=>{if(e.ok)return e.json();Promise.reject(`Error: ${e.status}`)}))}likeCard(e){return fetch(`${this._baseUrl}/cards/${e}/likes`,{method:"PUT",headers:this._headers}).then((e=>{if(e.ok)return e.json();Promise.reject(`Error: ${e.status}`)}))}dislikeCard(e){return fetch(`${this._baseUrl}/cards/${e}/likes`,{method:"DELETE",headers:this._headers}).then((e=>{if(e.ok)return e.json();Promise.reject(`Error: ${e.status}`)}))}getUserInfo(){return fetch(`${this._baseUrl}/users/me`,{method:"GET",headers:this._headers}).then((e=>{if(e.ok)return e.json();Promise.reject(`Error: ${e.status}`)}))}editUserInfo(e){let{name:t,about:r}=e;return fetch(`${this._baseUrl}/users/me`,{method:"PATCH",headers:this._headers,body:JSON.stringify({name:t,about:r})}).then((e=>{if(e.ok)return e.json();Promise.reject(`Error: ${e.status}`)}))}updateUserAvatar(e){return fetch(`${this._baseUrl}/users/me/avatar`,{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:e})}).then((e=>{if(e.ok)return e.json();Promise.reject(`Error: ${e.status}`)}))}},s=document.querySelector("#avatar-edit-modal"),c=s.querySelector(".modal__close-btn"),i=s.querySelector("#edit-avatar-link-input"),d=s.querySelector(".modal__submit-btn"),l=document.querySelector(".profile__edit-btn"),u=document.querySelector(".profile__add-btn"),m=document.querySelector(".profile__avatar"),_=document.querySelector("#edit-modal"),h=document.querySelector("#add-card-modal"),f=document.querySelector("#card-image-modal"),v=_.querySelector(".modal__close-btn"),y=h.querySelector(".modal__close-btn"),S=f.querySelector(".modal__close-btn"),b=_.querySelector("#modal__input"),k=_.querySelector("#modal__description"),p=document.querySelector(".profile__name"),E=document.querySelector(".profile__description"),q=document.querySelector(".modal__form"),L=document.querySelector("#add-card-form"),C=L.querySelector("#add-card-link-input"),g=L.querySelector("#add-card-name-input"),$=document.querySelector(".modal__image"),x=document.querySelector(".modal__image-footer-title"),j=document.querySelector("#delete-card-modal"),A=j.querySelector(".modal__close_delete-btn"),T=j.querySelector(".modal__confirm_cancel-btn"),U=j.querySelector(".modal__confirm_delete-btn"),P=document.querySelector(".cards__pics"),I=(P.querySelector(".card__footer-heart-btn"),e=>{e.target.classList.contains("modal_opened")&&w(e.target)});function D(e){e.classList.add("modal_opened"),document.body.addEventListener("click",I),document.addEventListener("keydown",N)}function w(e){e.classList.remove("modal_opened"),document.body.removeEventListener("click",I),document.removeEventListener("keydown",N)}function B(e){const t=document.querySelector("#card").content.querySelector(".card").cloneNode(!0);t.querySelector(".card__footer-title").textContent=e.name;const r=t.querySelector(".card__image");r.src=e.link,r.alt=e.name,r.id=e._id;const o=t.querySelector(".card__footer-heart-btn");return e.isLiked&&o.classList.add("card__footer-heart-btn-liked"),o.addEventListener("click",(()=>{!function(e,t){(!t.isLiked?a.likeCard(t._id):a.dislikeCard(t._id)).then((r=>{e.classList.toggle("card__footer-heart-btn-liked"),t.isLiked=r.isLiked})).catch(console.error)}(o,e)})),t.querySelector(".card__trash-btn").addEventListener("click",(()=>{var e,o;e=t,o=r.id,D(j),function(e,t){U.addEventListener("click",(()=>{U.innerText="Deleting...",setTimeout((()=>{const r=e.alt,o=n.findIndex((e=>e.name===r));n.toSpliced(1,o),e.remove(),a.deleteCard(t),w(j),U.innerText="Delete"}),1e3)}))}(e,o)})),r.addEventListener("click",(()=>{!function(e){const t=e.querySelector(".card__image"),r=e.querySelector(".card__footer-title");x.textContent=r.textContent,$.src="",D(f),$.src=t.src,$.alt=t.alt}(t)})),t}l.addEventListener("click",(()=>{var r,o;b.value=p.textContent,k.value=E.textContent,r=_,o=e,[b,k].forEach((e=>{t(r,e,o)})),D(_)})),u.addEventListener("click",(()=>{D(h)})),v.addEventListener("click",(()=>{w(_)})),c.addEventListener("click",(()=>{w(s)})),y.addEventListener("click",(()=>{w(h)})),S.addEventListener("click",(()=>{w(f)})),A.addEventListener("click",(()=>{w(j)})),T.addEventListener("click",(()=>{w(j)})),d.addEventListener("click",(e=>{!function(e){e.preventDefault(),a.updateUserAvatar(i.value).then((e=>{m.style.backgroundImage=`url(${e.avatar})`,w(s)})).catch(console.error)}(e)}));const N=e=>{"Escape"===e.key&&document.querySelectorAll(".modal_opened").forEach(w)};q.addEventListener("submit",(function(e){e.preventDefault();const t=_.querySelector(".modal__submit-btn");a.editUserInfo({name:b.value,about:k.value}).then((e=>{t.innerText="Saving...",setTimeout((()=>{p.textContent=e.name,E.textContent=e.about,w(_),t.innerText="Save"}),1500)})).catch(console.error)})),L.addEventListener("submit",(function(t){t.preventDefault();const r=h.querySelector(".modal__submit-btn");a.createCard({name:g.value,link:C.value}).then((t=>{const a={name:t.name,link:t.link,isLiked:t.isLiked,_id:t._id,owner:t.owner};""!==g.value&&""!==C.value&&(r.innerText="Saving...",setTimeout((()=>{n.unshift(a),P.prepend(B(a)),w(h),r.innerText="Save"}),1e3)),g.value="",C.value="";const s=Array.from(h.querySelectorAll(".modal__input"));o(s,r,e)})).catch(console.error)})),a.getAppInfo().then((e=>{let[t]=e;t.forEach((e=>{P.append(B(e))}))})).catch(console.error),a.getUserInfo().then((e=>{p.textContent=e.name,E.textContent=e.about,m.id=e._id,m.style.backgroundImage=`url(${e.avatar})`,m.addEventListener("click",(()=>{D(s)}))})).catch(console.error),r(e)}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,