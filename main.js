!function(){"use strict";const e={formSelector:".modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__submit-btn",inactiveButtonClass:"modal__submit-btn_inactive",inputErrorClass:"modal__input_type_error",errorClass:"modal__input-error_active"},t=(e,t,r)=>{const n=e.querySelector(`.${t.id}-error`);t.classList.remove(r.inputErrorClass),n.classList.remove(r.errorClass),n.textContent=""},r=e=>{Array.from(document.querySelectorAll(e.formSelector)).forEach((r=>{r.addEventListener("submit",(e=>{e.preventDefault()})),((e,r)=>{const o=Array.from(e.querySelectorAll(r.inputSelector)),a=e.querySelector(r.submitButtonSelector);n(o,a,r),o.forEach((c=>{c.addEventListener("input",(()=>{((e,r,n)=>{r.validity.valid?t(e,r,n):((e,t,r,n)=>{const o=e.querySelector(`.${t.id}-error`);t.classList.add(n.inputErrorClass),o.textContent=r,o.classList.add(n.errorClass)})(e,r,r.validationMessage,n)})(e,c,r),n(o,a,r)}))}))})(r,e)}))},n=(e,t,r)=>{(e=>e.some((e=>!e.validity.valid)))(e)?(t.setAttribute("disabled",""),t.classList.add(r.inactiveButtonClass)):(t.removeAttribute("disabled"),t.classList.remove(r.inactiveButtonClass))};function o(e,t){let r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"Save",n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"Saving...";t.textContent=e?n:r}function a(e,t){let r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"Saving...";t.preventDefault();const n=t.submitter,a=n.textContent;o(!0,n,a,r),e().then((()=>{t.target.reset()})).catch(console.error).finally((()=>{o(!1,n,a,r)}))}r(e);const c=[],l=new class{constructor(){this._token="df848569-e5f8-493b-8228-42998e590ff1",this._baseUrl="https://around-api.en.tripleten-services.com/v1",this._headers={authorization:this._token,"Content-type":"application/json"}}_request(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const r={headers:this._headers,...t},n=`${this._baseUrl}${e}`;return fetch(n,r).then(this._checkResponse)}getAppInfo(){return Promise.all([this.getUserInfo(),this.getAllCards()])}getAllCards(){return this._request("/cards",{method:"GET"})}createCard(e){let{name:t,link:r}=e;return this._request("/cards",{method:"POST",body:JSON.stringify({name:t,link:r})})}deleteCard(e){return this._request(`/cards/${e}`,{method:"DELETE"})}likeCard(e){return this._request(`/cards/${e}/likes`,{method:"PUT"})}dislikeCard(e){return this._request(`/cards/${e}/likes`,{method:"DELETE"})}getUserInfo(){return this._request("/users/me",{method:"GET"})}editUserInfo(e){let{name:t,about:r}=e;return this._request("/users/me",{method:"PATCH",body:JSON.stringify({name:t,about:r})})}updateUserAvatar(e){return this._request("/users/me/avatar",{method:"PATCH",body:JSON.stringify({avatar:e})})}_checkResponse(e){return e.ok?e.json():Promise.reject(`Error: ${e.status}`)}},i=document.querySelector("#avatar-edit-modal"),d=i.querySelector(".modal__submit-btn"),s=i.querySelector("#edit-avatar-link-input"),u=(i.querySelector(".modal__submit-btn"),document.querySelector(".profile__edit-btn")),m=document.querySelector(".profile__add-btn"),_=document.querySelector(".profile__avatar"),v=document.querySelector("#edit-modal"),y=document.querySelector("#add-card-modal"),f=document.querySelector("#card-image-modal"),h=y.querySelector(".modal__submit-btn"),S=document.querySelectorAll(".modal__close-btn"),q=v.querySelector("#modal__input"),k=v.querySelector("#modal__description"),p=(v.querySelector(".modal__submit-btn"),document.querySelector(".profile__name")),b=document.querySelector(".profile__description"),C=document.querySelector(".modal__form"),E=document.querySelector("#add-card-form"),L=E.querySelector("#add-card-link-input"),g=E.querySelector("#add-card-name-input"),A=document.querySelector(".modal__image"),x=document.querySelector(".modal__image-footer-title"),T=document.querySelector("#delete-card-modal"),$=T.querySelector(".modal__close_delete-btn"),B=T.querySelector(".modal__confirm_cancel-btn"),I=T.querySelector(".modal__confirm_delete-btn"),U=document.querySelector(".cards__pics"),D=(U.querySelector(".card__footer-heart-btn"),e=>{e.target===e.currentTarget&&w(e.currentTarget)});function P(e,t){e.classList.add("modal_opened"),e.addEventListener("click",D),e.closeCallBack=t,document.addEventListener("keydown",O)}function w(e){e.classList.remove("modal_opened"),e.removeEventListener("click",D),document.removeEventListener("keydown",O),"function"==typeof e.closeCallBack&&(e.closeCallBack(),e.closeCallBack=null)}function N(e){const t=document.querySelector("#card").content.querySelector(".card").cloneNode(!0);t.querySelector(".card__footer-title").textContent=e.name;const r=t.querySelector(".card__image");r.src=e.link,r.alt=e.name,r.id=e._id;const n=t.querySelector(".card__footer-heart-btn");return e.isLiked&&n.classList.add("card__footer-heart-btn-liked"),n.addEventListener("click",(()=>{!function(e,t){(!t.isLiked?l.likeCard(t._id):l.dislikeCard(t._id)).then((r=>{e.classList.toggle("card__footer-heart-btn-liked"),t.isLiked=r.isLiked})).catch(console.error)}(n,e)})),t.querySelector(".card__trash-btn").addEventListener("click",(()=>{!function(e,t){const r=function(e,t){const r=()=>{I.innerText="Deleting...",l.deleteCard(t).then((()=>{const t=e.querySelector(".card__image").alt,r=c.findIndex((e=>e.name===t));c.splice(r,1),e.remove(),w(T)})).catch(console.error).finally((()=>{I.innerText="Delete"})),n()},n=()=>{I.removeEventListener("click",r)};return I.addEventListener("click",r),n}(e,t);P(T,r),$.onclick=()=>w(T),B.onclick=()=>w(T)}(t,r.id)})),r.addEventListener("click",(()=>{!function(e){const t=e.querySelector(".card__image"),r=e.querySelector(".card__footer-title");x.textContent=r.textContent,A.src="",P(f),A.src=t.src,A.alt=t.alt}(t)})),t}u.addEventListener("click",(()=>{var r,n;q.value=p.textContent,k.value=b.textContent,r=v,n=e,[q,k].forEach((e=>{t(r,e,n)})),P(v)})),m.addEventListener("click",(()=>{P(y)})),B.addEventListener("click",(()=>{w(T)}));const O=e=>{"Escape"===e.key&&document.querySelectorAll(".modal_opened").forEach(w)};C.addEventListener("submit",(function(e){a((function(){return l.editUserInfo({name:q.value,about:k.value}).then((e=>{p.textContent=e.name,b.textContent=e.about,w(v)}))}),e)})),E.addEventListener("submit",(function(t){a((function(){return l.createCard({name:g.value,link:L.value}).then((t=>{const r={name:t.name,link:t.link,isLiked:t.isLiked,_id:t._id,owner:t.owner};""!==g.value&&""!==L.value&&(c.unshift(r),U.prepend(N(r)),w(y)),g.value="",L.value="";const o=Array.from(y.querySelectorAll(".modal__input"));n(o,h,e)}))}),t)})),i.addEventListener("submit",(function(t){a((function(){return l.updateUserAvatar(s.value).then((t=>{_.style.backgroundImage=`url(${t.avatar})`,s.value="";const r=Array.from(i.querySelectorAll(".modal__input"));n(r,d,e),w(i)}))}),t)})),l.getAppInfo().then((e=>{let[t,r]=e;p.textContent=t.name,b.textContent=t.about,_.id=t._id,_.style.backgroundImage=`url(${t.avatar})`,_.addEventListener("click",(()=>{P(i)})),r.forEach((e=>{U.append(N(e))}))})).catch(console.error),S.forEach((e=>{const t=e.closest(".modal");e.addEventListener("click",(()=>w(t)))})),r(e)}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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SUFDcEIsTUFBTTBJLEVBQVExSSxFQUFPMkksUUFBUSxVQUM3QjNJLEVBQU9wQixpQkFBaUIsU0FBUyxJQUFNOEcsRUFBV2dELElBQU8sSUFHM0RwSyxFQUFpQmpCLEUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zZV9wcm9qZWN0X3Nwb3RzLy4vc3JjL3NjcmlwdHMvdmFsaWRhdGlvbi5qcyIsIndlYnBhY2s6Ly9zZV9wcm9qZWN0X3Nwb3RzLy4vc3JjL3V0aWxzL3V0aWxzLmpzIiwid2VicGFjazovL3NlX3Byb2plY3Rfc3BvdHMvLi9zcmMvcGFnZXMvaW5kZXguanMiLCJ3ZWJwYWNrOi8vc2VfcHJvamVjdF9zcG90cy8uL3NyYy91dGlscy9hcGkuanMiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNvbnN0IHNldHRpbmdzID0ge1xuICBmb3JtU2VsZWN0b3I6IFwiLm1vZGFsX19mb3JtXCIsXG4gIGlucHV0U2VsZWN0b3I6IFwiLm1vZGFsX19pbnB1dFwiLFxuICBzdWJtaXRCdXR0b25TZWxlY3RvcjogXCIubW9kYWxfX3N1Ym1pdC1idG5cIixcbiAgaW5hY3RpdmVCdXR0b25DbGFzczogXCJtb2RhbF9fc3VibWl0LWJ0bl9pbmFjdGl2ZVwiLFxuICBpbnB1dEVycm9yQ2xhc3M6IFwibW9kYWxfX2lucHV0X3R5cGVfZXJyb3JcIixcbiAgZXJyb3JDbGFzczogXCJtb2RhbF9faW5wdXQtZXJyb3JfYWN0aXZlXCIsXG59O1xuXG5jb25zdCBzaG93SW5wdXRFcnJvciA9IChmb3JtRWxlbWVudCwgaW5wdXRFbGVtZW50LCBlcnJvck1lc3NhZ2UsIGNvbmZpZykgPT4ge1xuICBjb25zdCBlcnJvckVsZW1lbnQgPSBmb3JtRWxlbWVudC5xdWVyeVNlbGVjdG9yKGAuJHtpbnB1dEVsZW1lbnQuaWR9LWVycm9yYCk7XG5cbiAgaW5wdXRFbGVtZW50LmNsYXNzTGlzdC5hZGQoY29uZmlnLmlucHV0RXJyb3JDbGFzcyk7XG4gIGVycm9yRWxlbWVudC50ZXh0Q29udGVudCA9IGVycm9yTWVzc2FnZTtcbiAgZXJyb3JFbGVtZW50LmNsYXNzTGlzdC5hZGQoY29uZmlnLmVycm9yQ2xhc3MpO1xufTtcblxuY29uc3QgaGlkZUlucHV0RXJyb3IgPSAoZm9ybUVsZW1lbnQsIGlucHV0RWxlbWVudCwgY29uZmlnKSA9PiB7XG4gIGNvbnN0IGVycm9yRWxlbWVudCA9IGZvcm1FbGVtZW50LnF1ZXJ5U2VsZWN0b3IoYC4ke2lucHV0RWxlbWVudC5pZH0tZXJyb3JgKTtcbiAgaW5wdXRFbGVtZW50LmNsYXNzTGlzdC5yZW1vdmUoY29uZmlnLmlucHV0RXJyb3JDbGFzcyk7XG4gIGVycm9yRWxlbWVudC5jbGFzc0xpc3QucmVtb3ZlKGNvbmZpZy5lcnJvckNsYXNzKTtcbiAgZXJyb3JFbGVtZW50LnRleHRDb250ZW50ID0gXCJcIjtcbn07XG5cbmNvbnN0IGNoZWNrSW5wdXRWYWxpZGl0eSA9IChmb3JtRWxlbWVudCwgaW5wdXRFbGVtZW50LCBjb25maWcpID0+IHtcbiAgaWYgKCFpbnB1dEVsZW1lbnQudmFsaWRpdHkudmFsaWQpIHtcbiAgICBzaG93SW5wdXRFcnJvcihcbiAgICAgIGZvcm1FbGVtZW50LFxuICAgICAgaW5wdXRFbGVtZW50LFxuICAgICAgaW5wdXRFbGVtZW50LnZhbGlkYXRpb25NZXNzYWdlLFxuICAgICAgY29uZmlnXG4gICAgKTtcbiAgfSBlbHNlIHtcbiAgICBoaWRlSW5wdXRFcnJvcihmb3JtRWxlbWVudCwgaW5wdXRFbGVtZW50LCBjb25maWcpO1xuICB9XG59O1xuXG5jb25zdCBzZXRFdmVudExpc3RlbmVycyA9IChmb3JtRWxlbWVudCwgY29uZmlnKSA9PiB7XG4gIGNvbnN0IGlucHV0TGlzdCA9IEFycmF5LmZyb20oXG4gICAgZm9ybUVsZW1lbnQucXVlcnlTZWxlY3RvckFsbChjb25maWcuaW5wdXRTZWxlY3RvcilcbiAgKTtcbiAgY29uc3QgYnV0dG9uRWxlbWVudCA9IGZvcm1FbGVtZW50LnF1ZXJ5U2VsZWN0b3IoY29uZmlnLnN1Ym1pdEJ1dHRvblNlbGVjdG9yKTtcbiAgdG9nZ2xlQnV0dG9uU3RhdGUoaW5wdXRMaXN0LCBidXR0b25FbGVtZW50LCBjb25maWcpO1xuXG4gIGlucHV0TGlzdC5mb3JFYWNoKChpbnB1dEVsZW1lbnQpID0+IHtcbiAgICBpbnB1dEVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcImlucHV0XCIsICgpID0+IHtcbiAgICAgIGNoZWNrSW5wdXRWYWxpZGl0eShmb3JtRWxlbWVudCwgaW5wdXRFbGVtZW50LCBjb25maWcpO1xuICAgICAgdG9nZ2xlQnV0dG9uU3RhdGUoaW5wdXRMaXN0LCBidXR0b25FbGVtZW50LCBjb25maWcpO1xuICAgIH0pO1xuICB9KTtcbn07XG5cbmV4cG9ydCBjb25zdCBlbmFibGVWYWxpZGF0aW9uID0gKGNvbmZpZykgPT4ge1xuICBjb25zdCBmb3JtTGlzdCA9IEFycmF5LmZyb20oZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChjb25maWcuZm9ybVNlbGVjdG9yKSk7XG5cbiAgZm9ybUxpc3QuZm9yRWFjaCgoZm9ybUVsZW1lbnQpID0+IHtcbiAgICBmb3JtRWxlbWVudC5hZGRFdmVudExpc3RlbmVyKFwic3VibWl0XCIsIChldnQpID0+IHtcbiAgICAgIGV2dC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgIH0pO1xuXG4gICAgc2V0RXZlbnRMaXN0ZW5lcnMoZm9ybUVsZW1lbnQsIGNvbmZpZyk7XG4gIH0pO1xufTtcblxuY29uc3QgaGFzSW52YWxpZElucHV0ID0gKGlucHV0TGlzdCkgPT4ge1xuICByZXR1cm4gaW5wdXRMaXN0LnNvbWUoKGlucHV0RWxlbWVudCkgPT4ge1xuICAgIHJldHVybiAhaW5wdXRFbGVtZW50LnZhbGlkaXR5LnZhbGlkO1xuICB9KTtcbn07XG5cbmV4cG9ydCBjb25zdCB0b2dnbGVCdXR0b25TdGF0ZSA9IChpbnB1dExpc3QsIGJ1dHRvbkVsZW1lbnQsIGNvbmZpZykgPT4ge1xuICBpZiAoaGFzSW52YWxpZElucHV0KGlucHV0TGlzdCkpIHtcbiAgICBidXR0b25FbGVtZW50LnNldEF0dHJpYnV0ZShcImRpc2FibGVkXCIsIFwiXCIpO1xuICAgIGJ1dHRvbkVsZW1lbnQuY2xhc3NMaXN0LmFkZChjb25maWcuaW5hY3RpdmVCdXR0b25DbGFzcyk7XG4gIH0gZWxzZSB7XG4gICAgYnV0dG9uRWxlbWVudC5yZW1vdmVBdHRyaWJ1dGUoXCJkaXNhYmxlZFwiKTtcbiAgICBidXR0b25FbGVtZW50LmNsYXNzTGlzdC5yZW1vdmUoY29uZmlnLmluYWN0aXZlQnV0dG9uQ2xhc3MpO1xuICB9XG59O1xuXG5leHBvcnQgY29uc3QgcmVzZXRWYWxpZGF0aW9uID0gKGZvcm1FbGVtZW50LCBpbnB1dExpc3QsIGNvbmZpZykgPT4ge1xuICBpbnB1dExpc3QuZm9yRWFjaCgoaW5wdXQpID0+IHtcbiAgICBoaWRlSW5wdXRFcnJvcihmb3JtRWxlbWVudCwgaW5wdXQsIGNvbmZpZyk7XG4gIH0pO1xufTtcbmVuYWJsZVZhbGlkYXRpb24oc2V0dGluZ3MpO1xuIiwiZnVuY3Rpb24gcmVuZGVyTG9hZGluZyhcbiAgaXNMb2FkaW5nLFxuICBidXR0b24sXG4gIGJ1dHRvblRleHQgPSBcIlNhdmVcIixcbiAgbG9hZGluZ1RleHQgPSBcIlNhdmluZy4uLlwiXG4pIHtcbiAgYnV0dG9uLnRleHRDb250ZW50ID0gaXNMb2FkaW5nID8gbG9hZGluZ1RleHQgOiBidXR0b25UZXh0O1xufVxuXG5leHBvcnQgZnVuY3Rpb24gaGFuZGxlU3VibWl0KHJlcXVlc3QsIGV2dCwgbG9hZGluZ1RleHQgPSBcIlNhdmluZy4uLlwiKSB7XG4gIGV2dC5wcmV2ZW50RGVmYXVsdCgpO1xuICBjb25zdCBzdWJtaXRCdXR0b24gPSBldnQuc3VibWl0dGVyO1xuICBjb25zdCBpbml0aWFsVGV4dCA9IHN1Ym1pdEJ1dHRvbi50ZXh0Q29udGVudDtcblxuICByZW5kZXJMb2FkaW5nKHRydWUsIHN1Ym1pdEJ1dHRvbiwgaW5pdGlhbFRleHQsIGxvYWRpbmdUZXh0KTtcbiAgcmVxdWVzdCgpXG4gICAgLnRoZW4oKCkgPT4ge1xuICAgICAgZXZ0LnRhcmdldC5yZXNldCgpO1xuICAgIH0pXG4gICAgLmNhdGNoKGNvbnNvbGUuZXJyb3IpXG4gICAgLmZpbmFsbHkoKCkgPT4ge1xuICAgICAgcmVuZGVyTG9hZGluZyhmYWxzZSwgc3VibWl0QnV0dG9uLCBpbml0aWFsVGV4dCwgbG9hZGluZ1RleHQpO1xuICAgIH0pO1xufVxuIiwiaW1wb3J0IHsgQXBpIH0gZnJvbSBcIi4uL3V0aWxzL2FwaS5qc1wiO1xuaW1wb3J0IFwiLi9pbmRleC5jc3NcIjtcbmltcG9ydCB7XG4gIGVuYWJsZVZhbGlkYXRpb24sXG4gIHNldHRpbmdzLFxuICByZXNldFZhbGlkYXRpb24sXG4gIHRvZ2dsZUJ1dHRvblN0YXRlLFxufSBmcm9tIFwiLi4vc2NyaXB0cy92YWxpZGF0aW9uLmpzXCI7XG5pbXBvcnQgeyBoYW5kbGVTdWJtaXQgfSBmcm9tIFwiLi4vdXRpbHMvdXRpbHMuanNcIjtcblxuY29uc3QgaW5pdGlhbENhcmRzID0gW107XG5jb25zdCBhcGkgPSBuZXcgQXBpKCk7XG5cbmNvbnN0IHByb2ZpbGVBdmF0YXJFZGl0TW9kYWwgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI2F2YXRhci1lZGl0LW1vZGFsXCIpO1xuY29uc3QgcHJvZmlsZUF2YXRhckVkaXRidXR0b25FbGVtZW50ID1cbiAgcHJvZmlsZUF2YXRhckVkaXRNb2RhbC5xdWVyeVNlbGVjdG9yKFwiLm1vZGFsX19zdWJtaXQtYnRuXCIpO1xuY29uc3QgcHJvZmlsZUF2YXRhcklucHV0ID0gcHJvZmlsZUF2YXRhckVkaXRNb2RhbC5xdWVyeVNlbGVjdG9yKFxuICBcIiNlZGl0LWF2YXRhci1saW5rLWlucHV0XCJcbik7XG5jb25zdCBwcm9maWxlQXZhdGFyU2F2ZUJ1dHRvbiA9XG4gIHByb2ZpbGVBdmF0YXJFZGl0TW9kYWwucXVlcnlTZWxlY3RvcihcIi5tb2RhbF9fc3VibWl0LWJ0blwiKTtcblxuY29uc3QgcHJvZmlsZUVkaXRCdXR0b24gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnByb2ZpbGVfX2VkaXQtYnRuXCIpO1xuY29uc3QgYWRkUG9zdEJ1dHRvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucHJvZmlsZV9fYWRkLWJ0blwiKTtcbmNvbnN0IHByb2ZpbGVJbWFnZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucHJvZmlsZV9fYXZhdGFyXCIpO1xuY29uc3QgZWRpdFByb2ZpbGVNb2RhbCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjZWRpdC1tb2RhbFwiKTtcbmNvbnN0IGFkZFBvc3RNb2RhbCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjYWRkLWNhcmQtbW9kYWxcIik7XG5jb25zdCBpbWFnZVpvb21Nb2RhbCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjY2FyZC1pbWFnZS1tb2RhbFwiKTtcblxuY29uc3QgYnV0dG9uRWxlbWVudCA9IGFkZFBvc3RNb2RhbC5xdWVyeVNlbGVjdG9yKFwiLm1vZGFsX19zdWJtaXQtYnRuXCIpO1xuY29uc3QgY2xvc2VCdXR0b25zID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChcIi5tb2RhbF9fY2xvc2UtYnRuXCIpO1xuXG5jb25zdCBwcm9maWxlTmFtZUlucHV0ID0gZWRpdFByb2ZpbGVNb2RhbC5xdWVyeVNlbGVjdG9yKFwiI21vZGFsX19pbnB1dFwiKTtcbmNvbnN0IHByb2ZpbGVEZXNjcmlwdGlvbklucHV0ID0gZWRpdFByb2ZpbGVNb2RhbC5xdWVyeVNlbGVjdG9yKFxuICBcIiNtb2RhbF9fZGVzY3JpcHRpb25cIlxuKTtcbmNvbnN0IHByb2ZpbGVEZXNjcmlwdGlvblNhdmVCdXR0b24gPVxuICBlZGl0UHJvZmlsZU1vZGFsLnF1ZXJ5U2VsZWN0b3IoXCIubW9kYWxfX3N1Ym1pdC1idG5cIik7XG5cbmNvbnN0IHByb2ZpbGVVc2VyTmFtZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucHJvZmlsZV9fbmFtZVwiKTtcbmNvbnN0IHByb2ZpbGVVc2VyRGVzY3JpcHRpb24gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnByb2ZpbGVfX2Rlc2NyaXB0aW9uXCIpO1xuY29uc3QgcHJvZmlsZUZvcm0gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLm1vZGFsX19mb3JtXCIpO1xuY29uc3QgYWRkTW9kYWxGb3JtID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNhZGQtY2FyZC1mb3JtXCIpO1xuXG5jb25zdCBhZGRNb2RhbEZvcm1MaW5rID0gYWRkTW9kYWxGb3JtLnF1ZXJ5U2VsZWN0b3IoXCIjYWRkLWNhcmQtbGluay1pbnB1dFwiKTtcbmNvbnN0IGFkZE1vZGFsRm9ybUNhcHRpb24gPSBhZGRNb2RhbEZvcm0ucXVlcnlTZWxlY3RvcihcIiNhZGQtY2FyZC1uYW1lLWlucHV0XCIpO1xuY29uc3QgbW9kYWxJbWFnZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIubW9kYWxfX2ltYWdlXCIpO1xuY29uc3QgbW9kYWxGb290ZXJDYXB0aW9uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5tb2RhbF9faW1hZ2UtZm9vdGVyLXRpdGxlXCIpO1xuXG5jb25zdCBtb2RhbENvbmZpcm1EZWxldGUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI2RlbGV0ZS1jYXJkLW1vZGFsXCIpO1xuY29uc3QgY2xvc2VEZWxldGVNb2RhbEJ1dHRvbiA9IG1vZGFsQ29uZmlybURlbGV0ZS5xdWVyeVNlbGVjdG9yKFxuICBcIi5tb2RhbF9fY2xvc2VfZGVsZXRlLWJ0blwiXG4pO1xuY29uc3QgY2FuY2VsRGVsZXRlTW9kYWxCdXR0b24gPSBtb2RhbENvbmZpcm1EZWxldGUucXVlcnlTZWxlY3RvcihcbiAgXCIubW9kYWxfX2NvbmZpcm1fY2FuY2VsLWJ0blwiXG4pO1xuY29uc3QgbW9kYWxDb25maXJtRGVsZXRlQnRuID0gbW9kYWxDb25maXJtRGVsZXRlLnF1ZXJ5U2VsZWN0b3IoXG4gIFwiLm1vZGFsX19jb25maXJtX2RlbGV0ZS1idG5cIlxuKTtcblxuY29uc3QgY2FyZENvbnRlbnRDb250YWluZXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLmNhcmRzX19waWNzXCIpO1xuXG5jb25zdCBjYXJkSGVhcnRCdXR0b24gPSBjYXJkQ29udGVudENvbnRhaW5lci5xdWVyeVNlbGVjdG9yKFxuICBcIi5jYXJkX19mb290ZXItaGVhcnQtYnRuXCJcbik7XG5cbmNvbnN0IGNsb3NlTW9kYWxMaXN0ZW5lciA9IChldmVudCkgPT4ge1xuICBpZiAoZXZlbnQudGFyZ2V0ID09PSBldmVudC5jdXJyZW50VGFyZ2V0KSB7XG4gICAgY2xvc2VNb2RhbChldmVudC5jdXJyZW50VGFyZ2V0KTtcbiAgfVxufTtcblxuZnVuY3Rpb24gb3Blbk1vZGFsKG1vZGFsLCBjbG9zZUNhbGxCYWNrKSB7XG4gIG1vZGFsLmNsYXNzTGlzdC5hZGQoXCJtb2RhbF9vcGVuZWRcIik7XG4gIG1vZGFsLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCBjbG9zZU1vZGFsTGlzdGVuZXIpO1xuICBtb2RhbC5jbG9zZUNhbGxCYWNrID0gY2xvc2VDYWxsQmFjaztcblxuICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKFwia2V5ZG93blwiLCBjbG9zZU1vZGFsRXNjYXBlTGlzdGVuZXIpO1xufVxuXG5mdW5jdGlvbiBjbG9zZU1vZGFsKG1vZGFsKSB7XG4gIG1vZGFsLmNsYXNzTGlzdC5yZW1vdmUoXCJtb2RhbF9vcGVuZWRcIik7XG5cbiAgbW9kYWwucmVtb3ZlRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIGNsb3NlTW9kYWxMaXN0ZW5lcik7XG4gIGRvY3VtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJrZXlkb3duXCIsIGNsb3NlTW9kYWxFc2NhcGVMaXN0ZW5lcik7XG5cbiAgaWYgKHR5cGVvZiBtb2RhbC5jbG9zZUNhbGxCYWNrID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICBtb2RhbC5jbG9zZUNhbGxCYWNrKCk7XG4gICAgbW9kYWwuY2xvc2VDYWxsQmFjayA9IG51bGw7XG4gIH1cbn1cblxuZnVuY3Rpb24gaGFuZGxlUHJvZmlsZUZvcm1TdWJtaXQoZXZ0KSB7XG4gIGZ1bmN0aW9uIG1ha2VSZXF1ZXN0KCkge1xuICAgIHJldHVybiBhcGlcbiAgICAgIC5lZGl0VXNlckluZm8oe1xuICAgICAgICBuYW1lOiBwcm9maWxlTmFtZUlucHV0LnZhbHVlLFxuICAgICAgICBhYm91dDogcHJvZmlsZURlc2NyaXB0aW9uSW5wdXQudmFsdWUsXG4gICAgICB9KVxuICAgICAgLnRoZW4oKGRhdGEpID0+IHtcbiAgICAgICAgcHJvZmlsZVVzZXJOYW1lLnRleHRDb250ZW50ID0gZGF0YS5uYW1lO1xuICAgICAgICBwcm9maWxlVXNlckRlc2NyaXB0aW9uLnRleHRDb250ZW50ID0gZGF0YS5hYm91dDtcblxuICAgICAgICBjbG9zZU1vZGFsKGVkaXRQcm9maWxlTW9kYWwpO1xuICAgICAgfSk7XG4gIH1cbiAgaGFuZGxlU3VibWl0KG1ha2VSZXF1ZXN0LCBldnQpO1xufVxuXG5mdW5jdGlvbiBoYW5kbGVQcm9maWxlRWRpdEF2YXRhcihldnQpIHtcbiAgZnVuY3Rpb24gbWFrZVJlcXVlc3QoKSB7XG4gICAgcmV0dXJuIGFwaS51cGRhdGVVc2VyQXZhdGFyKHByb2ZpbGVBdmF0YXJJbnB1dC52YWx1ZSkudGhlbigoZGF0YSkgPT4ge1xuICAgICAgcHJvZmlsZUltYWdlLnN0eWxlLmJhY2tncm91bmRJbWFnZSA9IGB1cmwoJHtkYXRhLmF2YXRhcn0pYDtcblxuICAgICAgcHJvZmlsZUF2YXRhcklucHV0LnZhbHVlID0gXCJcIjtcbiAgICAgIGNvbnN0IGlucHV0TGlzdCA9IEFycmF5LmZyb20oXG4gICAgICAgIHByb2ZpbGVBdmF0YXJFZGl0TW9kYWwucXVlcnlTZWxlY3RvckFsbChcIi5tb2RhbF9faW5wdXRcIilcbiAgICAgICk7XG5cbiAgICAgIHRvZ2dsZUJ1dHRvblN0YXRlKGlucHV0TGlzdCwgcHJvZmlsZUF2YXRhckVkaXRidXR0b25FbGVtZW50LCBzZXR0aW5ncyk7XG5cbiAgICAgIGNsb3NlTW9kYWwocHJvZmlsZUF2YXRhckVkaXRNb2RhbCk7XG4gICAgfSk7XG4gIH1cbiAgaGFuZGxlU3VibWl0KG1ha2VSZXF1ZXN0LCBldnQpO1xufVxuXG5mdW5jdGlvbiBoYW5kbGVQb3N0Rm9ybVN1Ym1pdChldnQpIHtcbiAgZnVuY3Rpb24gbWFrZVJlcXVlc3QoKSB7XG4gICAgcmV0dXJuIGFwaVxuICAgICAgLmNyZWF0ZUNhcmQoe1xuICAgICAgICBuYW1lOiBhZGRNb2RhbEZvcm1DYXB0aW9uLnZhbHVlLFxuICAgICAgICBsaW5rOiBhZGRNb2RhbEZvcm1MaW5rLnZhbHVlLFxuICAgICAgfSlcbiAgICAgIC50aGVuKChkYXRhKSA9PiB7XG4gICAgICAgIGNvbnN0IG5ld0NhcmQgPSB7XG4gICAgICAgICAgbmFtZTogZGF0YS5uYW1lLFxuICAgICAgICAgIGxpbms6IGRhdGEubGluayxcbiAgICAgICAgICBpc0xpa2VkOiBkYXRhLmlzTGlrZWQsXG4gICAgICAgICAgX2lkOiBkYXRhLl9pZCxcbiAgICAgICAgICBvd25lcjogZGF0YS5vd25lcixcbiAgICAgICAgfTtcbiAgICAgICAgaWYgKGFkZE1vZGFsRm9ybUNhcHRpb24udmFsdWUgIT09IFwiXCIgJiYgYWRkTW9kYWxGb3JtTGluay52YWx1ZSAhPT0gXCJcIikge1xuICAgICAgICAgIGluaXRpYWxDYXJkcy51bnNoaWZ0KG5ld0NhcmQpO1xuXG4gICAgICAgICAgY2FyZENvbnRlbnRDb250YWluZXIucHJlcGVuZChnZXRDYXJkRWxlbWVudChuZXdDYXJkKSk7XG4gICAgICAgICAgY2xvc2VNb2RhbChhZGRQb3N0TW9kYWwpO1xuICAgICAgICB9XG4gICAgICAgIGFkZE1vZGFsRm9ybUNhcHRpb24udmFsdWUgPSBcIlwiO1xuICAgICAgICBhZGRNb2RhbEZvcm1MaW5rLnZhbHVlID0gXCJcIjtcblxuICAgICAgICBjb25zdCBpbnB1dExpc3QgPSBBcnJheS5mcm9tKFxuICAgICAgICAgIGFkZFBvc3RNb2RhbC5xdWVyeVNlbGVjdG9yQWxsKFwiLm1vZGFsX19pbnB1dFwiKVxuICAgICAgICApO1xuXG4gICAgICAgIHRvZ2dsZUJ1dHRvblN0YXRlKGlucHV0TGlzdCwgYnV0dG9uRWxlbWVudCwgc2V0dGluZ3MpO1xuICAgICAgfSk7XG4gIH1cbiAgaGFuZGxlU3VibWl0KG1ha2VSZXF1ZXN0LCBldnQpO1xufVxuXG5mdW5jdGlvbiBnZXRDYXJkRWxlbWVudChkYXRhKSB7XG4gIGNvbnN0IGNhcmRFbGVtZW50ID0gZG9jdW1lbnRcbiAgICAucXVlcnlTZWxlY3RvcihcIiNjYXJkXCIpXG4gICAgLmNvbnRlbnQucXVlcnlTZWxlY3RvcihcIi5jYXJkXCIpXG4gICAgLmNsb25lTm9kZSh0cnVlKTtcblxuICBjYXJkRWxlbWVudC5xdWVyeVNlbGVjdG9yKFwiLmNhcmRfX2Zvb3Rlci10aXRsZVwiKS50ZXh0Q29udGVudCA9IGRhdGEubmFtZTtcblxuICBjb25zdCBjYXJkSW1hZ2UgPSBjYXJkRWxlbWVudC5xdWVyeVNlbGVjdG9yKFwiLmNhcmRfX2ltYWdlXCIpO1xuXG4gIGNhcmRJbWFnZS5zcmMgPSBkYXRhLmxpbms7XG4gIGNhcmRJbWFnZS5hbHQgPSBkYXRhLm5hbWU7XG5cbiAgY2FyZEltYWdlLmlkID0gZGF0YS5faWQ7XG5cbiAgY29uc3QgY2FyZEhlYXJ0QnRuID0gY2FyZEVsZW1lbnQucXVlcnlTZWxlY3RvcihcIi5jYXJkX19mb290ZXItaGVhcnQtYnRuXCIpO1xuXG4gIGlmIChkYXRhLmlzTGlrZWQpIHtcbiAgICBjYXJkSGVhcnRCdG4uY2xhc3NMaXN0LmFkZChcImNhcmRfX2Zvb3Rlci1oZWFydC1idG4tbGlrZWRcIik7XG4gIH1cblxuICBjYXJkSGVhcnRCdG4uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcbiAgICBoYW5kbGVMaWtlQnV0dG9uKGNhcmRIZWFydEJ0biwgZGF0YSk7XG4gIH0pO1xuXG4gIGNvbnN0IGNhcmRUcmFzaEJ1dHRvbiA9IGNhcmRFbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuY2FyZF9fdHJhc2gtYnRuXCIpO1xuXG4gIGNhcmRUcmFzaEJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xuICAgIGhhbmRsZURlbGV0ZUJ1dHRvbihjYXJkRWxlbWVudCwgY2FyZEltYWdlLmlkKTtcbiAgfSk7XG5cbiAgY2FyZEltYWdlLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XG4gICAgb3BlbkltYWdlTW9kYWwoY2FyZEVsZW1lbnQpO1xuICB9KTtcblxuICByZXR1cm4gY2FyZEVsZW1lbnQ7XG59XG5mdW5jdGlvbiBoYW5kbGVMaWtlQnV0dG9uKGNhcmRFbCwgZGF0YSkge1xuICBjb25zdCB1cGRhdGVkTGlrZWRTdGF0ZSA9ICFkYXRhLmlzTGlrZWQ7XG5cbiAgY29uc3QgYXBpQ2FsbCA9IHVwZGF0ZWRMaWtlZFN0YXRlXG4gICAgPyBhcGkubGlrZUNhcmQoZGF0YS5faWQpXG4gICAgOiBhcGkuZGlzbGlrZUNhcmQoZGF0YS5faWQpO1xuXG4gIHJldHVybiBhcGlDYWxsXG4gICAgLnRoZW4oKHVwZGF0ZWRDYXJkKSA9PiB7XG4gICAgICBjYXJkRWwuY2xhc3NMaXN0LnRvZ2dsZShcImNhcmRfX2Zvb3Rlci1oZWFydC1idG4tbGlrZWRcIik7XG5cbiAgICAgIGRhdGEuaXNMaWtlZCA9IHVwZGF0ZWRDYXJkLmlzTGlrZWQ7XG4gICAgfSlcbiAgICAuY2F0Y2goY29uc29sZS5lcnJvcik7XG59XG5cbmZ1bmN0aW9uIGhhbmRsZURlbGV0ZUJ1dHRvbihjYXJkRWwsIGNhcmRJZCkge1xuICBjb25zdCByZW1vdmVMaXN0ZW5lciA9IGNvbmZpcm1DYXJkRGVsZXRlKGNhcmRFbCwgY2FyZElkKTtcbiAgb3Blbk1vZGFsKG1vZGFsQ29uZmlybURlbGV0ZSwgcmVtb3ZlTGlzdGVuZXIpO1xuXG4gIGNsb3NlRGVsZXRlTW9kYWxCdXR0b24ub25jbGljayA9ICgpID0+IGNsb3NlTW9kYWwobW9kYWxDb25maXJtRGVsZXRlKTtcblxuICBjYW5jZWxEZWxldGVNb2RhbEJ1dHRvbi5vbmNsaWNrID0gKCkgPT4gY2xvc2VNb2RhbChtb2RhbENvbmZpcm1EZWxldGUpO1xufVxuXG5mdW5jdGlvbiBjb25maXJtQ2FyZERlbGV0ZShjYXJkRWwsIGNhcmRJZCkge1xuICBjb25zdCBkZWxldGVDb25maXJtYXRpb25IYW5kbGVyID0gKCkgPT4ge1xuICAgIG1vZGFsQ29uZmlybURlbGV0ZUJ0bi5pbm5lclRleHQgPSBcIkRlbGV0aW5nLi4uXCI7XG4gICAgYXBpXG4gICAgICAuZGVsZXRlQ2FyZChjYXJkSWQpXG4gICAgICAudGhlbigoKSA9PiB7XG4gICAgICAgIGNvbnN0IGNhcmROYW1lID0gY2FyZEVsLnF1ZXJ5U2VsZWN0b3IoXCIuY2FyZF9faW1hZ2VcIikuYWx0O1xuICAgICAgICBjb25zdCBpbmRleCA9IGluaXRpYWxDYXJkcy5maW5kSW5kZXgoKGNhcmQpID0+IGNhcmQubmFtZSA9PT0gY2FyZE5hbWUpO1xuICAgICAgICBpbml0aWFsQ2FyZHMuc3BsaWNlKGluZGV4LCAxKTtcbiAgICAgICAgY2FyZEVsLnJlbW92ZSgpO1xuICAgICAgICBjbG9zZU1vZGFsKG1vZGFsQ29uZmlybURlbGV0ZSk7XG4gICAgICB9KVxuICAgICAgLmNhdGNoKGNvbnNvbGUuZXJyb3IpXG4gICAgICAuZmluYWxseSgoKSA9PiB7XG4gICAgICAgIG1vZGFsQ29uZmlybURlbGV0ZUJ0bi5pbm5lclRleHQgPSBcIkRlbGV0ZVwiO1xuICAgICAgfSk7XG4gICAgcmVtb3ZlTGlzdGVuZXIoKTtcbiAgfTtcblxuICBjb25zdCByZW1vdmVMaXN0ZW5lciA9ICgpID0+IHtcbiAgICBtb2RhbENvbmZpcm1EZWxldGVCdG4ucmVtb3ZlRXZlbnRMaXN0ZW5lcihcbiAgICAgIFwiY2xpY2tcIixcbiAgICAgIGRlbGV0ZUNvbmZpcm1hdGlvbkhhbmRsZXJcbiAgICApO1xuICB9O1xuXG4gIG1vZGFsQ29uZmlybURlbGV0ZUJ0bi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgZGVsZXRlQ29uZmlybWF0aW9uSGFuZGxlcik7XG5cbiAgcmV0dXJuIHJlbW92ZUxpc3RlbmVyO1xufVxuXG5mdW5jdGlvbiBvcGVuSW1hZ2VNb2RhbChjYXJkRWwpIHtcbiAgY29uc3QgY2FyZEltYWdlID0gY2FyZEVsLnF1ZXJ5U2VsZWN0b3IoXCIuY2FyZF9faW1hZ2VcIik7XG4gIGNvbnN0IG1vZGFsQ2FwdGlvbiA9IGNhcmRFbC5xdWVyeVNlbGVjdG9yKFwiLmNhcmRfX2Zvb3Rlci10aXRsZVwiKTtcblxuICBtb2RhbEZvb3RlckNhcHRpb24udGV4dENvbnRlbnQgPSBtb2RhbENhcHRpb24udGV4dENvbnRlbnQ7XG5cbiAgbW9kYWxJbWFnZS5zcmMgPSBcIlwiO1xuXG4gIG9wZW5Nb2RhbChpbWFnZVpvb21Nb2RhbCk7XG5cbiAgbW9kYWxJbWFnZS5zcmMgPSBjYXJkSW1hZ2Uuc3JjO1xuICBtb2RhbEltYWdlLmFsdCA9IGNhcmRJbWFnZS5hbHQ7XG59XG5cbnByb2ZpbGVFZGl0QnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XG4gIHByb2ZpbGVOYW1lSW5wdXQudmFsdWUgPSBwcm9maWxlVXNlck5hbWUudGV4dENvbnRlbnQ7XG4gIHByb2ZpbGVEZXNjcmlwdGlvbklucHV0LnZhbHVlID0gcHJvZmlsZVVzZXJEZXNjcmlwdGlvbi50ZXh0Q29udGVudDtcbiAgcmVzZXRWYWxpZGF0aW9uKFxuICAgIGVkaXRQcm9maWxlTW9kYWwsXG4gICAgW3Byb2ZpbGVOYW1lSW5wdXQsIHByb2ZpbGVEZXNjcmlwdGlvbklucHV0XSxcbiAgICBzZXR0aW5nc1xuICApO1xuICBvcGVuTW9kYWwoZWRpdFByb2ZpbGVNb2RhbCk7XG59KTtcblxuYWRkUG9zdEJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xuICBvcGVuTW9kYWwoYWRkUG9zdE1vZGFsKTtcbn0pO1xuXG5jYW5jZWxEZWxldGVNb2RhbEJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xuICBjbG9zZU1vZGFsKG1vZGFsQ29uZmlybURlbGV0ZSk7XG59KTtcblxuY29uc3QgY2xvc2VNb2RhbEVzY2FwZUxpc3RlbmVyID0gKGV2ZW50KSA9PiB7XG4gIGlmIChldmVudC5rZXkgPT09IFwiRXNjYXBlXCIpIHtcbiAgICBjb25zdCBvcGVuTW9kYWxzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChcIi5tb2RhbF9vcGVuZWRcIik7XG4gICAgb3Blbk1vZGFscy5mb3JFYWNoKGNsb3NlTW9kYWwpO1xuICB9XG59O1xuXG5mdW5jdGlvbiBjbG9zZU1vZGFsRXNjYXBlKGV2dCwgbW9kYWwsIGNhbGxiYWNrKSB7XG4gIGlmIChldnQua2V5ID09PSBcIkVzY2FwZVwiKSB7XG4gICAgY2xvc2VNb2RhbChtb2RhbCk7XG4gICAgaWYgKGNhbGxiYWNrKSBjYWxsYmFjaygpO1xuICB9XG59XG5cbnByb2ZpbGVGb3JtLmFkZEV2ZW50TGlzdGVuZXIoXCJzdWJtaXRcIiwgaGFuZGxlUHJvZmlsZUZvcm1TdWJtaXQpO1xuYWRkTW9kYWxGb3JtLmFkZEV2ZW50TGlzdGVuZXIoXCJzdWJtaXRcIiwgaGFuZGxlUG9zdEZvcm1TdWJtaXQpO1xucHJvZmlsZUF2YXRhckVkaXRNb2RhbC5hZGRFdmVudExpc3RlbmVyKFwic3VibWl0XCIsIGhhbmRsZVByb2ZpbGVFZGl0QXZhdGFyKTtcblxuYXBpXG4gIC5nZXRBcHBJbmZvKClcbiAgLnRoZW4oKFt1c2VyRGF0YSwgY2FyZHNdKSA9PiB7XG4gICAgcHJvZmlsZVVzZXJOYW1lLnRleHRDb250ZW50ID0gdXNlckRhdGEubmFtZTtcbiAgICBwcm9maWxlVXNlckRlc2NyaXB0aW9uLnRleHRDb250ZW50ID0gdXNlckRhdGEuYWJvdXQ7XG4gICAgcHJvZmlsZUltYWdlLmlkID0gdXNlckRhdGEuX2lkO1xuXG4gICAgcHJvZmlsZUltYWdlLnN0eWxlLmJhY2tncm91bmRJbWFnZSA9IGB1cmwoJHt1c2VyRGF0YS5hdmF0YXJ9KWA7XG5cbiAgICBwcm9maWxlSW1hZ2UuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcbiAgICAgIG9wZW5Nb2RhbChwcm9maWxlQXZhdGFyRWRpdE1vZGFsKTtcbiAgICB9KTtcblxuICAgIGNhcmRzLmZvckVhY2goKGl0ZW0pID0+IHtcbiAgICAgIGNhcmRDb250ZW50Q29udGFpbmVyLmFwcGVuZChnZXRDYXJkRWxlbWVudChpdGVtKSk7XG4gICAgfSk7XG4gIH0pXG4gIC5jYXRjaChjb25zb2xlLmVycm9yKTtcblxuY2xvc2VCdXR0b25zLmZvckVhY2goKGJ1dHRvbikgPT4ge1xuICBjb25zdCBwb3B1cCA9IGJ1dHRvbi5jbG9zZXN0KFwiLm1vZGFsXCIpO1xuICBidXR0b24uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IGNsb3NlTW9kYWwocG9wdXApKTtcbn0pO1xuXG5lbmFibGVWYWxpZGF0aW9uKHNldHRpbmdzKTtcbiIsImV4cG9ydCBjbGFzcyBBcGkge1xuICBjb25zdHJ1Y3RvcigpIHtcbiAgICB0aGlzLl90b2tlbiA9IHByb2Nlc3MuZW52LlRPS0VOO1xuICAgIHRoaXMuX2Jhc2VVcmwgPSBcImh0dHBzOi8vYXJvdW5kLWFwaS5lbi50cmlwbGV0ZW4tc2VydmljZXMuY29tL3YxXCI7XG4gICAgdGhpcy5faGVhZGVycyA9IHtcbiAgICAgIGF1dGhvcml6YXRpb246IHRoaXMuX3Rva2VuLFxuICAgICAgXCJDb250ZW50LXR5cGVcIjogXCJhcHBsaWNhdGlvbi9qc29uXCIsXG4gICAgfTtcbiAgfVxuICBfcmVxdWVzdChlbmRwb2ludCwgb3B0aW9ucyA9IHt9KSB7XG4gICAgY29uc3QgZmluYWxPUHRpb25zID0ge1xuICAgICAgaGVhZGVyczogdGhpcy5faGVhZGVycyxcbiAgICAgIC4uLm9wdGlvbnMsXG4gICAgfTtcbiAgICBjb25zdCB1cmwgPSBgJHt0aGlzLl9iYXNlVXJsfSR7ZW5kcG9pbnR9YDtcbiAgICByZXR1cm4gZmV0Y2godXJsLCBmaW5hbE9QdGlvbnMpLnRoZW4odGhpcy5fY2hlY2tSZXNwb25zZSk7XG4gIH1cblxuICBnZXRBcHBJbmZvKCkge1xuICAgIC8vY2FsbCBnZXQgdXNlciBpbmZvIGluIGFycmF5XG4gICAgcmV0dXJuIFByb21pc2UuYWxsKFt0aGlzLmdldFVzZXJJbmZvKCksIHRoaXMuZ2V0QWxsQ2FyZHMoKV0pO1xuICB9XG5cbiAgZ2V0QWxsQ2FyZHMoKSB7XG4gICAgcmV0dXJuIHRoaXMuX3JlcXVlc3QoXCIvY2FyZHNcIiwgeyBtZXRob2Q6IFwiR0VUXCIgfSk7XG4gIH1cblxuICBjcmVhdGVDYXJkKHsgbmFtZSwgbGluayB9KSB7XG4gICAgcmV0dXJuIHRoaXMuX3JlcXVlc3QoXCIvY2FyZHNcIiwge1xuICAgICAgbWV0aG9kOiBcIlBPU1RcIixcbiAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHsgbmFtZSwgbGluayB9KSxcbiAgICB9KTtcbiAgfVxuXG4gIGRlbGV0ZUNhcmQoY2FyZElkKSB7XG4gICAgcmV0dXJuIHRoaXMuX3JlcXVlc3QoYC9jYXJkcy8ke2NhcmRJZH1gLCB7IG1ldGhvZDogXCJERUxFVEVcIiB9KTtcbiAgfVxuXG4gIGxpa2VDYXJkKGNhcmRJZCkge1xuICAgIHJldHVybiB0aGlzLl9yZXF1ZXN0KGAvY2FyZHMvJHtjYXJkSWR9L2xpa2VzYCwgeyBtZXRob2Q6IFwiUFVUXCIgfSk7XG4gIH1cblxuICBkaXNsaWtlQ2FyZChjYXJkSWQpIHtcbiAgICByZXR1cm4gdGhpcy5fcmVxdWVzdChgL2NhcmRzLyR7Y2FyZElkfS9saWtlc2AsIHsgbWV0aG9kOiBcIkRFTEVURVwiIH0pO1xuICB9XG5cbiAgZ2V0VXNlckluZm8oKSB7XG4gICAgcmV0dXJuIHRoaXMuX3JlcXVlc3QoXCIvdXNlcnMvbWVcIiwgeyBtZXRob2Q6IFwiR0VUXCIgfSk7XG4gIH1cblxuICBlZGl0VXNlckluZm8oeyBuYW1lLCBhYm91dCB9KSB7XG4gICAgcmV0dXJuIHRoaXMuX3JlcXVlc3QoXCIvdXNlcnMvbWVcIiwge1xuICAgICAgbWV0aG9kOiBcIlBBVENIXCIsXG4gICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7IG5hbWUsIGFib3V0IH0pLFxuICAgIH0pO1xuICB9XG5cbiAgdXBkYXRlVXNlckF2YXRhcihhdmF0YXIpIHtcbiAgICByZXR1cm4gdGhpcy5fcmVxdWVzdChcIi91c2Vycy9tZS9hdmF0YXJcIiwge1xuICAgICAgbWV0aG9kOiBcIlBBVENIXCIsXG4gICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7IGF2YXRhciB9KSxcbiAgICB9KTtcbiAgfVxuXG4gIF9jaGVja1Jlc3BvbnNlKHJlcykge1xuICAgIGlmIChyZXMub2spIHtcbiAgICAgIHJldHVybiByZXMuanNvbigpO1xuICAgIH1cbiAgICByZXR1cm4gUHJvbWlzZS5yZWplY3QoYEVycm9yOiAke3Jlcy5zdGF0dXN9YCk7XG4gIH1cbn1cbiJdLCJuYW1lcyI6WyJzZXR0aW5ncyIsImZvcm1TZWxlY3RvciIsImlucHV0U2VsZWN0b3IiLCJzdWJtaXRCdXR0b25TZWxlY3RvciIsImluYWN0aXZlQnV0dG9uQ2xhc3MiLCJpbnB1dEVycm9yQ2xhc3MiLCJlcnJvckNsYXNzIiwiaGlkZUlucHV0RXJyb3IiLCJmb3JtRWxlbWVudCIsImlucHV0RWxlbWVudCIsImNvbmZpZyIsImVycm9yRWxlbWVudCIsInF1ZXJ5U2VsZWN0b3IiLCJpZCIsImNsYXNzTGlzdCIsInJlbW92ZSIsInRleHRDb250ZW50IiwiZW5hYmxlVmFsaWRhdGlvbiIsIkFycmF5IiwiZnJvbSIsImRvY3VtZW50IiwicXVlcnlTZWxlY3RvckFsbCIsImZvckVhY2giLCJhZGRFdmVudExpc3RlbmVyIiwiZXZ0IiwicHJldmVudERlZmF1bHQiLCJzZXRFdmVudExpc3RlbmVycyIsImlucHV0TGlzdCIsImJ1dHRvbkVsZW1lbnQiLCJ0b2dnbGVCdXR0b25TdGF0ZSIsImNoZWNrSW5wdXRWYWxpZGl0eSIsInZhbGlkaXR5IiwidmFsaWQiLCJzaG93SW5wdXRFcnJvciIsImVycm9yTWVzc2FnZSIsImFkZCIsInZhbGlkYXRpb25NZXNzYWdlIiwic29tZSIsImhhc0ludmFsaWRJbnB1dCIsInNldEF0dHJpYnV0ZSIsInJlbW92ZUF0dHJpYnV0ZSIsInJlbmRlckxvYWRpbmciLCJpc0xvYWRpbmciLCJidXR0b24iLCJidXR0b25UZXh0IiwiYXJndW1lbnRzIiwibGVuZ3RoIiwidW5kZWZpbmVkIiwibG9hZGluZ1RleHQiLCJoYW5kbGVTdWJtaXQiLCJyZXF1ZXN0Iiwic3VibWl0QnV0dG9uIiwic3VibWl0dGVyIiwiaW5pdGlhbFRleHQiLCJ0aGVuIiwidGFyZ2V0IiwicmVzZXQiLCJjYXRjaCIsImNvbnNvbGUiLCJlcnJvciIsImZpbmFsbHkiLCJpbml0aWFsQ2FyZHMiLCJhcGkiLCJjb25zdHJ1Y3RvciIsInRoaXMiLCJfdG9rZW4iLCJwcm9jZXNzIiwiX2Jhc2VVcmwiLCJfaGVhZGVycyIsImF1dGhvcml6YXRpb24iLCJfcmVxdWVzdCIsImVuZHBvaW50Iiwib3B0aW9ucyIsImZpbmFsT1B0aW9ucyIsImhlYWRlcnMiLCJ1cmwiLCJmZXRjaCIsIl9jaGVja1Jlc3BvbnNlIiwiZ2V0QXBwSW5mbyIsIlByb21pc2UiLCJhbGwiLCJnZXRVc2VySW5mbyIsImdldEFsbENhcmRzIiwibWV0aG9kIiwiY3JlYXRlQ2FyZCIsIl9yZWYiLCJuYW1lIiwibGluayIsImJvZHkiLCJKU09OIiwic3RyaW5naWZ5IiwiZGVsZXRlQ2FyZCIsImNhcmRJZCIsImxpa2VDYXJkIiwiZGlzbGlrZUNhcmQiLCJlZGl0VXNlckluZm8iLCJfcmVmMiIsImFib3V0IiwidXBkYXRlVXNlckF2YXRhciIsImF2YXRhciIsInJlcyIsIm9rIiwianNvbiIsInJlamVjdCIsInN0YXR1cyIsInByb2ZpbGVBdmF0YXJFZGl0TW9kYWwiLCJwcm9maWxlQXZhdGFyRWRpdGJ1dHRvbkVsZW1lbnQiLCJwcm9maWxlQXZhdGFySW5wdXQiLCJwcm9maWxlRWRpdEJ1dHRvbiIsImFkZFBvc3RCdXR0b24iLCJwcm9maWxlSW1hZ2UiLCJlZGl0UHJvZmlsZU1vZGFsIiwiYWRkUG9zdE1vZGFsIiwiaW1hZ2Vab29tTW9kYWwiLCJjbG9zZUJ1dHRvbnMiLCJwcm9maWxlTmFtZUlucHV0IiwicHJvZmlsZURlc2NyaXB0aW9uSW5wdXQiLCJwcm9maWxlVXNlck5hbWUiLCJwcm9maWxlVXNlckRlc2NyaXB0aW9uIiwicHJvZmlsZUZvcm0iLCJhZGRNb2RhbEZvcm0iLCJhZGRNb2RhbEZvcm1MaW5rIiwiYWRkTW9kYWxGb3JtQ2FwdGlvbiIsIm1vZGFsSW1hZ2UiLCJtb2RhbEZvb3RlckNhcHRpb24iLCJtb2RhbENvbmZpcm1EZWxldGUiLCJjbG9zZURlbGV0ZU1vZGFsQnV0dG9uIiwiY2FuY2VsRGVsZXRlTW9kYWxCdXR0b24iLCJtb2RhbENvbmZpcm1EZWxldGVCdG4iLCJjYXJkQ29udGVudENvbnRhaW5lciIsImNsb3NlTW9kYWxMaXN0ZW5lciIsImV2ZW50IiwiY3VycmVudFRhcmdldCIsImNsb3NlTW9kYWwiLCJvcGVuTW9kYWwiLCJtb2RhbCIsImNsb3NlQ2FsbEJhY2siLCJjbG9zZU1vZGFsRXNjYXBlTGlzdGVuZXIiLCJyZW1vdmVFdmVudExpc3RlbmVyIiwiZ2V0Q2FyZEVsZW1lbnQiLCJkYXRhIiwiY2FyZEVsZW1lbnQiLCJjb250ZW50IiwiY2xvbmVOb2RlIiwiY2FyZEltYWdlIiwic3JjIiwiYWx0IiwiX2lkIiwiY2FyZEhlYXJ0QnRuIiwiaXNMaWtlZCIsImNhcmRFbCIsInVwZGF0ZWRDYXJkIiwidG9nZ2xlIiwiaGFuZGxlTGlrZUJ1dHRvbiIsInJlbW92ZUxpc3RlbmVyIiwiZGVsZXRlQ29uZmlybWF0aW9uSGFuZGxlciIsImlubmVyVGV4dCIsImNhcmROYW1lIiwiaW5kZXgiLCJmaW5kSW5kZXgiLCJjYXJkIiwic3BsaWNlIiwiY29uZmlybUNhcmREZWxldGUiLCJvbmNsaWNrIiwiaGFuZGxlRGVsZXRlQnV0dG9uIiwibW9kYWxDYXB0aW9uIiwib3BlbkltYWdlTW9kYWwiLCJyZXNldFZhbGlkYXRpb24iLCJ2YWx1ZSIsImlucHV0Iiwia2V5IiwibmV3Q2FyZCIsIm93bmVyIiwidW5zaGlmdCIsInByZXBlbmQiLCJzdHlsZSIsImJhY2tncm91bmRJbWFnZSIsInVzZXJEYXRhIiwiY2FyZHMiLCJpdGVtIiwiYXBwZW5kIiwicG9wdXAiLCJjbG9zZXN0Il0sInNvdXJjZVJvb3QiOiIifQ==